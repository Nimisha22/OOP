#include <iostream>

using namespace std;

class node {
   public:
    int data;
    node* next;
};

class linkedlist {
    protected:
        node *head;
        int size;

    public:
        linkedlist(): head(nullptr), size(0) { }

        node* newnode(int data){
            node* current = new node;
            current->data = data;
            current->next = nullptr;
            return current;
        }

        node* getNode(int index){
            node *now = head;
            for(int i = 0; i < index && now != nullptr; i++)
                now = now->next;
            
            return now;
        }
};

class linkedlist2: public linkedlist {
    public:
        void insert(int index, int val){
            if(head == nullptr){
                head = newnode(val);
                size++;
                return;
            }

            if(index == 0){
                node* current = newnode(val);
                current->next = head;
                head = current;
                size++;
                return;
            }

            if(index > size){
                cout << "The list is not long enough to hold the index\n";
                exit(1);
            }

            node* prev = getNode(index - 1);
            node* current = newnode(val);

            current->next = prev->next;
            prev->next = current;
            size++;
        }

        void remove(int index){
            if(index >= size){
                cout << "The list is not long enough to hold the index\n";
                exit(1);
            }
            
            if(index == 0){
                node* temp = head;
                head = head->next;
                delete temp;
                return;
            }

            node* previous = getNode(index - 1);
            node* current = previous->next;
            previous->next = current->next;
            delete current;
        }

        void display(){
            node* current = head;
            while(current != nullptr){
                cout << current->data << " -> ";
                current = current->next;
            }
            cout << "NULL\n";
        }
};

int main() {
    linkedlist2 list;
    list.insert(0, 2);
    list.insert(0, 20);
    list.insert(1, 50);
    
    list.remove(3);

    list.display();
    return 0;
}
