#include <bits/stdc++.h>

using namespace std;

class Queue {
protected:
   int q[5];
   int front;
   int rear;

public:
    Queue() {
        front = -1;
        rear = -1;
    }

    void enqueue(int var) {
        rear++;
        if(rear == 5) rear = 0;
        q[rear] = var;


        if(front == -1) front = rear;
    }

    int dequeue() {
        int ret = q[front];
        if(front == rear) {
            front = -1;
            rear = -1;
        }
        else front = (front + 1) % 5;
        return ret;
    }

    int size(){
        if(front == -1 && rear == -1) return 0;

        return (front < rear) ? rear - front : 5 - front + rear;
    }
};


class Queue2: public Queue {
public:
    void enqueue(int var) {
        if(size() == 4)
        // if(front == rear || rear == 4) 
        {
            cout << "Queue Full";
            exit(1);
        }
        cout << "Enqueued: " << var << '\n';
        Queue::enqueue(var);
    }

    int dequeue() {
        if(front == -1 && rear == -1) {
            cout << "Queue Empty";
            exit(1);
        }
        return Queue::dequeue();
    }
};


int main() {
    Queue2 q1;
    // q1.dequeue();

    q1.enqueue(1);
    q1.enqueue(2);
    q1.enqueue(3);
    q1.enqueue(4);

    cout << q1.dequeue() << '\n';
    cout << q1.dequeue() << '\n';
    cout << q1.dequeue() << '\n';
    cout << q1.dequeue() << '\n';

    cout << "The size is " << q1.size() << '\n';

    q1.enqueue(23);
    q1.enqueue(51);
    q1.enqueue(69);
    q1.enqueue(72);
    q1.enqueue(100);
    q1.enqueue(200);
    

    cout << q1.dequeue() << '\n';
    cout << q1.dequeue() << '\n';
    cout << q1.dequeue() << '\n';

    return 0;
}
